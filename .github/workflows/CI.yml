name: CI

on:
  push:
    branches: [ main ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v1
      with:
        languages: 'csharp'
        config-file: ./.github/codeql/codeql-config.yml
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x
    - name: dotnet format
      run: |
        dotnet tool install -g dotnet-format
        dotnet format src/OctoshiftCLI.sln --check
    - name: Restore dependencies
      run: dotnet restore src/OctoshiftCLI.sln
    - name: Build
      run: dotnet build src/OctoshiftCLI.sln --no-restore /p:TreatWarningsAsErrors=true
    - name: Unit Test
      run: dotnet test src/OctoshiftCLI.sln --filter FullyQualifiedName\!~Integration --no-build --verbosity normal --logger:"junit;LogFilePath=unit-tests.xml"
    - name: Integration Test
      env: 
        ADO_PAT: ${{ secrets.ADO_PAT }}
        GH_PAT: ${{ secrets.GH_PAT }}
      run: dotnet test src/OctoshiftCLI.sln --filter FullyQualifiedName\~Integration --no-build --verbosity normal --logger:"junit;LogFilePath=integration-tests.xml"
    - name: Publish Unit Test Results
      uses: EnricoMi/publish-unit-test-result-action@v1
      if: always()
      with:
        files: "**/*-tests.xml"
        check_name: "Test Results"
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v1

  publish:
    
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    needs: build
    environment: PUBLISH_RELEASE

    steps:
    - uses: actions/checkout@v2
      with:
        token: ${{ secrets.RELEASE_NOTES_PAT }}
        fetch-depth: 0
    - name: Validate tag on main
      shell: pwsh
      run: |
        git checkout main
        $mainsha = $(git show-ref refs/heads/main --hash)
        $tagsha = $(git show-ref ${{ github.ref }} --hash)

        Write-Output "refs/heads/main: $mainsha"
        Write-Output "${{ github.ref }}: $tagsha"

        if ($mainsha -ne $tagsha) {
          Write-Error "tag must match HEAD of main"
          exit 1
        }
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x
    - name: Build Artifacts
      run: ./publish.ps1
      shell: pwsh
      env:
        CLI_VERSION: ${{ github.ref }}
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        body_path: ./RELEASENOTES.md
        files: |
          ./dist/octoshift.*.win-x64.zip
          ./dist/octoshift.*.linux-x64.tar.gz
          ./dist/octoshift.*.osx-x64.tar.gz
    - name: Archive Release Notes
      shell: pwsh
      run: |
        $TAG_NAME = "${{ github.ref }}".Substring(10)
        Get-Content ./RELEASENOTES.md | Out-File -FilePath ./releasenotes/$TAG_NAME.md
        "" | Out-File ./RELEASENOTES.md
    - name: Commit Archived Release Notes
      uses: stefanzweifel/git-auto-commit-action@v4
      with:
        commit_message: Automated commit of archived release notes [skip ci]
        file_pattern: RELEASENOTES.md releasenotes/*.md
        branch: main